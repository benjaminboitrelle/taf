*********************************************************

LIST OF RELEASES (or tagged versions) OF TAF

*********************************************************
Contact: baudot@in2p3.fr, auguste.besson@iphc.cnrs.fr
Web page: http://www.iphc.cnrs.fr/TAF.html

*********************************************************************************************************
Master - 2020/12/03
*********************************************************************************************************

- additional features in Script/thistaf to allow conditional compilation <== does not work fully yet
- documentation updates (Create your own BoardReader, )
- Reader IMGBoardReader updated to read data format for Monolithic Imager sensor (MimosaType 61)

*********************************************************************************************************
VERSION 3.00.0 - 2020/08/20
*********************************************************************************************************

- additional features in MRaw to handle SITRINEO (Student test bench) analysis
- Reader for new VMEBoardReader to adapt for change in INFN readou board

*********************************************************************************************************
Master - 2018/10/17
*********************************************************************************************************

- New reader (BoarReaderIHEP) to read data from IHEP acquisition system
- Possibility to declare dummy plane, with no data associated, just for multiple scattering
- New methods in MRaw for X-rays and image production
- New method Mraw::StudyBeamProfile for beam profile application (thanks Q.Liu)
- Some fixes to comply with clang compilation rules (thanks A.Maire)
- Improvement of deformation correction (included in DPrecAlign now)
- New command in MRaw to study multiple scattering
- New macro  SpatialResolution_with_EnergyScan
- New internal toyMC package to generate tracks (gTAF->MimosaGeneration)
- Method to remove hot pixels more robust (shall work with all type of BoardReader)


*********************************************************************************************************
VERSION 2.10.0 - 2015/01/07
*********************************************************************************************************


- Possibility to get the fit from a subset of hits within a track (SubTrack)
- Track fit now exploits fully the plane resolution,
  which can be set in the configuration file
- Propagate flag to TTree to indicate if hit used in track fit
- A number of corrections in classes to decode E.Spiriti's DAQ output
   (DecoderM18, AliMIMOSA22RawStreamVASingle) from INFN colleagues
- New methods for clustering related to sparse-binary data, by A.Perez
- Improved cluster superposition to pixel raw data in plots from MRaw

*****************************
 New features, by ValÃ©rian: 2014/07/01
*****************************
-  PXI DAQ lib configuration centralized in code/include/pxi_daq_lib_config.h
-  New TAF configuration script : thistaf.sh should be used instead of TAF-config
-  New Makefile.arch : see Makefile for help or configuration
-  Makefile displays clearer messages, and get the svn revision for the TAF Welcome message
-  TAF can be lauched with arguments for various actions (like $TAF -run 26005), see help with $TAF --help
-  MRax class, inspired from MRaw is added
-  Tracking method configurable via config file
-  The RunNumber in config file is obsolet, the value from InitSession is now used
-  A configFile can be set via an argument when launching TAF
-  TAF can be launched and work at any place
-  DataSubDirPrefix parameter added to config file reader for data file in subdirs like DataPath/RUN26001/
-  Some Mandatory fields are tested inconfig file, if not present, print an error and quit
- rootlogon.C the explicit loading of TAF & Minuit libraries is configurable
*****************************


- New method for the history of some hits & tracks properties wrt event#
  in MRaw.cxx (gTAF->GetRaw()->DisplayHistory())
- rootlogon.C updated with explicit loading of TAF & Minuit libraries
- New method to generate image with MRaw.cxx (gTAF->GetRaw()->DisplayImage())
- New classes to decode more formats related to E.Spiriti DAQ
- Possibility to parametrize plane deformation
   through Legendre polynomials (see DPlane.cxx)
   with new parameters in config files (see DSetup.cxx)
- Possibility to customize ladder (instead of fixed types)
- Individual pixel distribution available with gTAF->GetRaw()->DisplayNoise()
- Possibility to specify an analysis goal in the configuration file,
   so that not all plots are generated (for MimosaXxxxx command type)
- Bug corrected in find_tracks (hits on seed planes not associated to a track are set un-associated)

*********************************************************************************************************
VERSION 2.9.7 - 2013/11/12
*********************************************************************************************************

- One variable (HsN) for seed SNR replaced in the TTRee (DAuthenticHit)
- New plots for cluster properties, reshuffled in separate method (CheckCluster)
- New methods for alignement with Minivectors from Loic,
  class DPrecAlign has new parameters (CorPar file format is hence changed)
- Possibility to set the DSF file name to any name, not just a number
- Bug fix in file list management

*********************************************************************************************************
VERSION 2.9.6 - 2013/09/23
*********************************************************************************************************

- Method AlignTrackerMinuit includes iterations managed manually
- Range of histograms for noise, signal and SNR set in configuration file
- All histos are written in a single file (runXXXXX_ClChargePlY.root) with MimosaPro
- Digitization emulation in DPlane, controlled with "Digitizer" field in configuration

*********************************************************************************************************
VERSION 2.9.4 - 2013/08/21
*********************************************************************************************************

- additional analysis cut introduced in config file and used in MimosaPro
  for selecting a range for the seed index (usefull for MIMOSA 22 sensors)
- protections in the eta correction mechanism to prevent crashes
  when the correction is not applicable
- corrections for warning observed when compiled with clang

*********************************************************************************************************
VERSION 2.9.0 - 2013/08/19
*********************************************************************************************************

- decoding of MIMOSA 22 type data with IMGBoardReader
- new trigger mode 3 to build events from a glidding window of 3 frames
- alignment allows for geometrical and chi2 cuts
- new analysis parameters read from the configuration file (DSetup)
- IMGBoardReader class can now handle multi-frame mode (more than one frames per event)
  and getRaw()->DisplayRawData2D() function from can display multi frames as well
- (tracker-)Aligment methods include possibility to restrict the tracks used
  for aligment to a given geometrical area (at z=0).
  And, the distance to associate track and hits can be different in the two
  directions (boundsU and boundsV).
- Added information when PXIeBoardReader unable to load run.

*********************************************************************************************************
VERSION 2.8.1 - 2013/02/11
*********************************************************************************************************

- Addition of DLadder class to represent multi-sensor planes
  (like double-sided ladders)
- Upgrade of DSetup class to allow additions of new fields in the config file
   while keeping backward compatibility with old formats
- Addition of MMillepede class for global alignment strategy
- Addition of a class DMonteCarlo for the follow-up of MC hits
- Bug fixed in DPlane::FindNeighbours for rectangular pixels
- PXIeBoardReader : Count of invalid triggers and storage of triggers for triggerMode=0
- Computation of pixel autocorrelation in GetRaw->DisplayNoise( aPLane)
- New alignment method based on MINUIT for tracker (see gTAF->AlignTrackerMinuit)
- Option with several seed planes for the tracking are now fully available
- Upgraded management of missed-events when synchronizing IMG and PXIe boards
- Bug fixed in DPrecAlign::DataPoint saving
- Check for different pitch in U & V in final analysis
- New decoding of trigger information for PXIeBoardReader
- Management of strip-telescope data (not yet fully efficient)
- Addition of MonteCarlo Display.
- Fitting vertex per event with chi2 minimisation.

*********************************************************************************************************
VERSION 2.8.0 - 2012/08/21
*********************************************************************************************************

- Improved displays in the MRaw class.
- Addition of an IMGBoardReader to read analog non-sparsified data
  from either PXI or Imager boards.
- Addition of a GIGBoardReader to read GEANT4 simulated data.

*********************************************************************************************************
VERSION 2.7.2 - 2012/05/10
*********************************************************************************************************

- New plots to control the track quality when displaying cumulated track stats.
- Bug fix in the handling of the list of hits for object DTrack.
- Timestamps and #lines in overflow computed in PXIeBoardReader,
   method to dump these timestamps in MRaw.
- Bug fix in DPrecAlign for plane equation.

*********************************************************************************************************
VERSION 2.7.1 - 2012/03/11
*********************************************************************************************************

- New mechanism to specifiy list of pixels to veto using the config file (see include/vetoPixel.c)
- New trigger mode 2 introduced in PXIeBoardReader to allow vetoing events with the trigger (intended for power pulsing studies)
- Correction of a bug in DPlane for find_cluster

*********************************************************************************************************
VERSION 2.7.0 - 2011/11/24
*********************************************************************************************************

- PXIeBoardReader event stop condition corrected (when trigger arrives at last line)
- Hot pixel suppression mechanism revived for method MimosaPro
- new method FakeRateBinaryFromRawData in MRaw.cxx to compute the fake hit rate from raw data
  when the sensor has binary output
- new plot to display the efficiency with respect to the position on the sensor
- new method DisplayGeometry to display the telescope geometry in MRaw()
- pxi_daq_lib library (almost) ready for 64 bits
- Some corrections for the MiniVector methods
- all global variables removed for compilation under WINDOWS

*********************************************************************************************************
VERSION 2.6.3 - 2011/10/26
*********************************************************************************************************

=> Released used for ULTIMATE (Mimosa 28) analysis on July, August and October 2011
- improved hit finder for large clusters (seed is dynamically changed if needed)
- management of info stored in Ttree for size sparing
- some bugs fixed in the trigger management for PXIeBoardReader
- print-out geomatrix limits in MimosaPro
- first attempt to compile under WINDOWS (file path names and global variables)

*********************************************************************************************************
VERSION 2.6.2 - 2011/06/19
*********************************************************************************************************

- update of the pxi_daq library
- mechanism for backward compatibility with previous pxi_daw libraries
  and old PXIBoardReader class (< v.2.6)
- some fix to the management of CorPar file in MimosaAnalysis

*********************************************************************************************************
VERSION 2.6.1 - 2011/04/13
*********************************************************************************************************

- alignment procedure is now really robust (can cope with any angle)
- new plane status 0 to allow tracking through multi-sensors plane
- take care of noisy pixels with external file
- reads new version of data format from PXI-FlexRIO board
  => this version is not backward compatible with v2.6 because of new PXIBoardReader class
- new Makefile using the Makefile.arch from ROOT to be compatinle with any platform
- alternative compilation mechanism available through the macro Scripts/compilTAF.C
- new management of output files:
  * all outputs from Dxxx classes (data reconstruction) go to Results/<run number>
  * TTree still goes to datDSF
  * all outputs from Mxxx classes (final analysis) go to results_M<mimosa type>
-
- the code does not compile under 64 bits (i.e. with -m64 option)
- the code does not yet manage WINDOWS-like directory names


*********************************************************************************************************
VERSION 2.6 - 2010/10/07
*********************************************************************************************************

- MAnalysis class completely re-arranged in many generic functions.
  and a new class MCommands for MimosaPro, MimosaCalibration, MimosaFakeRate, MimosaMiniVectors...
- Latest TNT format incorporated in TNTBoardReader.
  => configuration file format changed!
- Robust management of Noise and Pedestal information from an externale file.
- Alignement procedure for DUT (DPrecAlign) improved to handle DUT at non-0 z.

*********************************************************************************************************
VERSION 2.5 - 2010/05/27
*********************************************************************************************************

- Method to read noise information from an external file in DPlane for sparsified data
  => configuration file format changed!
- Improved management of triggers in PXIBoardReader
- Few corrections

*********************************************************************************************************
VERSION 2.4 - 2009/09/15
*********************************************************************************************************

- Statistics method added for BoardReader classes and DAcq, DTracker, DPlane
- Alignment method updated for tracker plane, 180 degrees flip taken into account
- MimosaPro method fully operational with additional option to dump event info into file

*********************************************************************************************************
VERSION 2.3 - 2009/08/26
*********************************************************************************************************

- Upgrade and cleaning of MimosaPro method to deal with multi-tracks
  include the give-up of the MPara Class => all parameters are set in the config file now
- Update of hit finding for binary data (MIMOSA 26)
- Decoding af new data format from PXI boards for MIMOSA 16
- Upgrade of tracking and alignment methods from version 1.3


*********************************************************************************************************
VERSION 2.2 - 2009/05/26
*********************************************************************************************************

- Allow readout of unsparsified or sparsified data simultaneously
- Add several parameters in the config file (data file name, distance hit-track, ...)
- SetDebug with a negative level allows to set DAQ board debug level only
- New mechanism to ensure synchronisation of different acquisition modules



*********************************************************************************************************
VERSION 2.1 - 2009/05/22
*********************************************************************************************************

- Use Timestamp in TNTBoarReader
- New variable in config file for plane type
- Decode Mimosa24 data
- Track reconstruction allows now multi-hits, so several tracks can be reconstructed. The number of
tracks reconstructed is set in the config file by TracksMaximum.



*********************************************************************************************************
VERSION 2.0 - 2009/05/20
*********************************************************************************************************

- upgraded with TNT format of May 2009
- include Mimosa25 and Mimosa24 readout



*********************************************************************************************************
VERSION 1.3 - 2009/07/21
*********************************************************************************************************

- Incorporate benefits of further versions 2.x but keeping old TNT format of version 1.x
- MimosaPro modified to use multi-tracking possibility



*********************************************************************************************************
VERSION 1.1 - 2009/05/21
*********************************************************************************************************

- Allow tracking in a multi-hit environment (DTracker changed)



*********************************************************************************************************
VERSION 1.0 - 2009/05/20
*********************************************************************************************************

- First release compatible with TAPI and TNT board readout of september 2008
- mostly equivalent to TAPI regarding hit finding and tracking
- MimosaPro routine mostly unchanged wrt MAF-analog
- Running requires the ususal
  InitSession, MakeEta, AlignTelescope, DSFProduction, MimosaPro

  BUT, additional feature are SetDebug and SetAlignment(2)



*********************************************************************************************************
EXAMPLES
*********************************************************************************************************

A number of configuration files are provided as examples inside the config_TEST directory. They shall work anywhere,
provided you have the raw data, contact us to get a sample of them. In order to test them you just need to copy the
corresponding file inside your config directory, and change the DataPath variable to the Path where the raw data is
located

- RUN 1040, June 2014
 2 MIMOSA 28, 1 MIMOSA 22THRb, 2 MIMOSA 18, 2 MIMOSA 28 at LNFrascati - Beam Test Facility

- RUN 34539, August 2013
 6 MIMOSA 26 (digital output) with one MIMOSA 34

- RUN 32824, August 2012
 6 MIMOSA 26 (digital output) with one MIMOSA 32 (binary output) and
  the synchronization of two BoardReaders.

- RUN 26000, February 2012
 2 MIMOSA 26 sensors data taken in lab, with no source, and with power pulsing,
 frames with trigger information indicates when the power was switched ON/OFF.

- RUN 226031, November 2011
 8 MIMOSA 26 sensors, 4 as reference planes in the telescope, 4 in the PLUME ladder (2 per side),
 SPS beam 120 GeV pions, normal incidence but beam located in between two PLUME sensors

- RUN 28510, July 2011
 6 MIMOSA 28 (ULTIMATE) sensors in a telescope (4 as references and 2 as DUT), SPS beam 120 GeV pions, normal incidence
 acquisition = new PXIexpress system where only triggered frames are written

- RUN 28905, July 2011
 6 MIMOSA 28 (ULTIMATE) sensors in a telescope but data taken without beam,
 this run is to estimate the fake hit rate
  acquisition = new PXIexpress system where only triggered frames are written

- RUN 26519, August 2010
 6 MIMOSA 26 sensors in a telescope (4 as references and 2 as DUT), SPS beam 120 GeV pions, normal incidence
 acquisition = old PXI system where all frames are written

- RUN 22704,
 1 MIMOSA 22 AHR sensor in a telescope of 8 strip planes, SPS beam 120 GeV pions, normal incidence
 acquisition = Imager-USB system

- RUN 18400,
 1 MIMOSA 18 sensor exposed to a Rutenium source
 acquisition = TNT board

- RUN 18007,
 1 MIMOSA 18 sensor exposed to a Rutenium source
 acquisition = IMAGER board

 - RUN 226020
   PLUME Beam test @ CERN-SPS on Oct. 2011: 8 Mi26 chips.
   acquisition PXIe

 - RUN 28822 and 28848
   SALAT test beam @ DESY on Feb 2014: 8 Mi28 chips
   acquisition PXIe

 - RUN 18538
   Mi18 Beam test @ CERN-SPS on Sep. 2007: Telescope with 4 planes of Mi18 chips.
   acquisition IMG

 - RUN 35507 and 35604
   FSBB-M0 test beam @ CERN-SPS (Oct. 2014) and DESY (Mar. 2015): Telescope of 6 planes of FSBB-M0 chips.
   Acquisition PIXe

 - RUN 35705 and 35604
   FSBB-M0-bis test beam @ DESY (Jun. 2015) and CERN-SPS (Oct. 2015): Telescope of 6 planes of FSBB-M0-bis chips.
   Acquisition PIXe



*********************************************************************************************************
COMMENTS ON FEATURES
*********************************************************************************************************

- compilation
  * PXIeBoardReader.cxx uses an #include to define which pxi_daq library version is used

- Variables which are hardcoded

  * A number of options in IMGBoardReader.

  * In the method find_tracks() of the class DTracker.cxx, you choose by commenting
    the method to extrapolate the track to the next plane.
    --> not true anymore since v2.8.1

  * In DTrack.cxx, method Analyze, you choose to use a vertex point
    to start your track or not by commenting/uncommenting the proper lines.
    --> not true anymore since v2.8.1

  * DAcq.cxx sets the "vetoOverflow" flag for the PXIeBoardReader objects (line 177)

  * Each DAQ Board type is associated with a unique integer id in DAcq.cxx
    1 = IMG, 2 = ?, 3 = TNT, 4 = PXI, 5 = PXIe, 6 = GIG

  * Max number of modules to be associated to a plane is 16 (from release 2.0, 4 in 1.0). This is hardcoded in DSetup.h and can be changed if needed.

  * max number of modules for a given module type is 16
    in DSetup.h for the declaration of *DeviceDataFile[16]

  * Max number of submatrix (in total, whatever the number of DUT) is 10, hardcoded in DSetup.h
    First subamtrix number is 0.

  * limits on shift and tilt change to stop alignment in MAlign.cxx

  * maximum size of the IndexOfGoodHitsInEvent array in MCommands.cxx

  * minimum noise to consider the value is reasonable and hence compute a S/N for a pixel
    min value is 0.5 in DHit::Analyse and in DPixel::GetPulseHeightToNoise

*********************************************************************************************************
TO DO LIST FOR DEVELOPERS
*********************************************************************************************************

* HIGH PRIORITY

- Propose a display of pixel position (based on (col,lin)<->(u,v) methods)

- Allows Mrax class to work on any geometry

- Manage properly and uniformely the MimosaType variable everywhere:
   set it once for all

- Set a method to sparsify the data for analogue output with no noise recomputation

- Reshape MRaw to have histos booked and filled separately from the display
  => might be useless since the introduction of the MRax class

- Reshape the classes DHit and DTrack to allow easy switching between different
   clustering and tracking algorithm.
  => Currently managed with flags in the config file to switch to different find_xxx methods (JB July 2013)

- Insure all variables are stable against 64bits CPU (especially in BoardReader classes)
  => Currently work with a patch...(JB+LC, May 2012)

- Provide a Digitizer that simulates the pixel response to a list of energy
  depositions read from an input file

- Add some statistics computation on the noise distribution

* LOW PRIORITY

- Check in MimosaPro that hits are not selected several times by different tracks

- In each output file, store a canvas with text about the configuration and cuts

- Add protection if DTDIR not defined

- Provide an estimation of the telescope resolution from geometry and available plane resolution

- Management of cuts (both for DSFProduction and for final analyses) especially for bookkeeping

- Create a GetCuts method in MCommands managing one or two planes

- Better management of readout types and mimosa types in DPLane::Update (it is a mess currently)

- Take care of sensor aspect ratio in MRaw.cxx method for display

- In the align tracking procedure, ask the user to store or not the new parameters,
   could be usefull in the case where the fit procedure went wrong

- Improve the MimosaFakerate command to get rate for each submatrix and per column and line

- change the computation of the geoMatrix limit
	from position in microns
	to index (row and column) of pixels

- for eta algorithm in tracker switch from histograms to arrays (like done in MimosaAnalysis)

- include AlignStatus of tracker in config file (maybe useless?)

* DONE

- Allow different event building mode for the DUT and the Ref planes in PXIeBoardReader,
   for instance, DUT event may use one additional frame compared to REF event
  => done, JB 2014

- Introduce a digitization emulation algorithm in DPlane
  => done, JB August 2013

- Add fit of residual (DV/DU) vs (V/U) in Minuit Alignment procedure
  => done, JB August 2013

- Change the reading method for the configuration file in DSetup
  to allow for new variables BUT keeping the compatibility with old files
  => done, JB January 2013

- include the precision alignment of DUT in the method AlignTracker
  => done, LC September 2012

- Cope with strip-telescope data
  => done, JB August 2012

- Provide a ImagerBoardReader to decode rawdata from the IPHC Imager-USB board
  => done, JB+SS August 2012

- Generate a printout method for MCommand.cxx (#splitline{top}{bottom})
  => mostly done, SS+MG 2012/?

- CrossCheck coherence between cuts ClusterLimitU and MaxNStrips
  => done, JB 2012/05/09

- Allow usage of run number with any digits (especially for directory naming)
  => done, JB+VR 2012/05/04

- Provide a MCBoardReader which would read a GEANT4 output file, digitize the energy deposition and then provide a list of pixels as any other BoardReader
  => done JB+LC, 2012/04/24 (GIGBoardReader)

- Allow display of position in tracker coordinates and not only in plane coord. for MRaw Display functions
  => done JB+VR, 2012/04/02

- Move the Hot Hit Map mechanism used in MimosaPro method as a generic methods usable by others MCommands.cxx methods.
  => done JB, 2011/11/23

- Provide a method to deal with clusters containing several occurenres of the same pixel. This happens when several frames are merged to produce a single physical event.
  => done JB+SS, 2011/11/07

- Modify DSFProduction to choose the level of information actually stored (hits of all plane or not, tracks...)
  => done JB 2011/07/21

- Get rid of all global/external variables for compilation under WINDOWS
  => done JB 2011/07/21

- Manage efficiency computation in MCommands.cxx methods as separate and general methods in the MAnalysis.cxx class. Also include efficiency computation dependant on X and Y.
  => done MG+JB 2011/11/04

- Make the generation of directories compatible with any system (add Windows!)
  => done JB 2011/07/18

- Use the Root Documentation generation for the classes.
  => done JB 2011/07/20

- Allow to increment above 9 files for the TNT input files
  => done JB 2010/10/06

- Add new word case in TNT word=50000000 for overflow
  => done JB 2010/10/06

- Include statistics printout for TNTBoardReader
  => done JB 2010/09/27

- Re-shuffle MimosaPro function for clarity, all histogram filling should be externalized
  => done JB 2010/07/29

- mechanism to compute noise from TNT + to retrieve it during data mining
  => done YV 2009/?

- implement histograms for statistics on data mining during the DSFProduction
  => done JB 2009/09/10

- have a mechanism to change the debug level after InitSession
  => done JB 2009/05/12

- read the rawdata filename from config file
  => done JB 2009/05/25

- setup a mechanism to reject event when too many hits in a plane
  => done  JB 2009/08/26

- allow best track over all possible ones when several hits
  => done JB 2009/05/21

- upgrade to new TNT format of May 2009
  => done RDM 2009/05/20

- include harcoded parameters in config file (# events for alignment, max hit-track distance...)
  => done JB 2009/05/25

- Use the globalTool function info, error instead of simple cout or printf
  => probably useless

- Check that all modules declared are actually associated to a plane, otherwise STOP.
  => done JB 2009/05/25

- If possible get rid of the MPara class, everything should come from the config file
  => done JB 2009/08/26
